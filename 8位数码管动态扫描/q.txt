/******************************8位数码管动态扫描************************
* 8位数码管动态扫描
* 每位数码管显示的数字从0加到9
***********************************************************************/

#include "sys.h"
#include "delay.h"
#include "led.h"

 
#define uchar unsigned char

uchar show_w1,show_w2,show_w3,show_w4,show_w5,show_w6,show_w7,show_w8,flag,count;
uchar seg[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
unsigned char clock[]={0,1,2,3,4,5,6,7,8,9};
int min=5,sec1=0,sec2=1;

/***************************主函数*****************************/
int main()
{
	int j;	 
	int k;
	int interval = 1;
	int interval1 = 1000;
	//uchar i;

	Stm32_Clock_Init( 6 ); // (12M的)6倍频
	delay_init( 72 );
	LED_Init();

	LED_SEL = 0;
	show_w1=0;
	show_w2=1;
	show_w3=2;
	show_w4=3;
	show_w5=4;
	show_w6=5;
	show_w7=6;
	show_w8=7;
	
 
//计时器
	for(k=1;;k++)
     {	
	 j=0;
	 if(sec1==0&&sec2==0&&min==0){
		sec1=0;
		sec2=0;
		min=0;
 	 }
	 else if(sec1==0&&sec2==0)
	 {
	 sec1=5;
	 sec2=9;
	 min--;
	 }
	 else if(sec2==0){
	 sec1--;
	 sec2=9;
	 }
	 else{
	 sec2--;
	 }  
	 while(j++<70){
	 if(min!=0){   //对分钟小于1min之后的处理
		PortationDisplay(0,clock[min]);
 		delay_ms(interval1*0.005);
		SetLed1(1,clock[sec1]); 
 		delay_ms(interval1*0.005);
		SetLed1(2,clock[sec2]);
		delay_ms(interval1*0.005);
		} 
		else{
	    SetLed1(0,clock[sec1]); 
 		delay_ms(interval1*0.007);
		SetLed1(1,clock[sec2]);
		delay_ms(interval1*0.007);
		}
        } 
     }
	 
		  	/*while(1)
	{*/
	   	 //学号循环
		/*int i,j;
		for(i=0;i<22;i++)
		{
		    for(j=0;j<50;j++)
			{
   		    SetLed(0, show_w1%22);
		    //delay_ms(interval);
		    delay_ms(interval);
		    SetLed(1, show_w2%22);
		    //delay_ms(interval);
			delay_ms(interval);
			SetLed(2, show_w3%22);
			//delay_ms(interval);
			delay_ms(interval);
			SetLed(3, show_w4%22);
			//delay_ms(interval);
			delay_ms(interval);
			SetLed(4, show_w5%22);
			//delay_ms(interval);
			delay_ms(interval);
			SetLed(5, show_w6%22);
			//delay_ms(interval);
			delay_ms(interval);
			SetLed(6, show_w7%22);
			//delay_ms(interval);
			delay_ms(interval);
			SetLed(7, show_w8%22);
			//delay_ms(interval);
			delay_ms(interval);	  
			}	
				show_w1++;
				show_w2++;
				show_w3++;
				show_w4++;
				show_w5++;
				show_w6++;
				show_w7++;
				show_w8++;	
 		 }	 */
		   /* 减法
		   SetLed1(0,9);
		   delay_ms(interval);
		   SetLed1(1,9);
		   delay_ms(interval);
		    SetLed1(2,11);
		   delay_ms(interval);
		   SetLed1(3,8);
		   delay_ms(interval);
		   SetLed1(4,9);
		   delay_ms(interval);
		   SetLed1(5,10);
		   delay_ms(interval);
		   SetLed1(6,1);
		   delay_ms(interval);
		   SetLed1(7,0);
		   delay_ms(interval);
		   */
		   /*SetLedm(0,3);
		   delay_ms(interval);
		   SetLed1(1,7);
		   delay_ms(interval);
		 	SetLed1(2,6);
		   delay_ms(interval);
 			SetLed1(3,7);
		   delay_ms(interval);
 				SetLed1(4,3);
		   delay_ms(interval);
 				SetLed1(5,5);
		   delay_ms(interval);
 			SetLed1(6,2);
		   delay_ms(interval);
 			SetLed1(7,0);
		   delay_ms(interval);
			 */
		  /*
		  int i,j,k;
		  //SetLedm(0
		  for(i=5;i>=0;i--)
		  {
		    for(j=5;j>0;j--)
			{
			   for(k=60;k>=0;k--)
			   {
			   SetLedm(0,i);
			   delay_ms(interval);
			   SetLed(1,j);
			   delay_ms(interval);
			   SetLed(2, k%10);
			   delay_ms(interval) ;
			   }
			}
		}  */
	//}	 
  }
